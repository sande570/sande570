name: Deploy PR Previews

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: read

# Allow one concurrent deployment
concurrency:
  group: "pages-with-previews"
  cancel-in-progress: true

jobs:
  build-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main üõéÔ∏è
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Ruby üíé
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3.5"
          bundler-cache: true

      - name: Setup Python üêç
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Update _config.yml ‚öôÔ∏è
        uses: fjogeleit/yaml-update-action@main
        with:
          commitChange: false
          valueFile: "_config.yml"
          propertyPath: "giscus.repo"
          value: ${{ github.repository }}

      - name: Install and Build Main üîß
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick
          pip3 install --upgrade nbconvert
          export JEKYLL_ENV=production
          bundle exec jekyll build

      - name: Purge unused CSS üßπ
        run: |
          npm install -g purgecss
          purgecss -c purgecss.config.js

      - name: Upload main site
        uses: actions/upload-artifact@v4
        with:
          name: main-site
          path: _site

  build-pr-previews:
    runs-on: ubuntu-latest
    outputs:
      pr-list: ${{ steps.get-prs.outputs.pr-list }}
    steps:
      - name: Get open PRs üìã
        id: get-prs
        uses: actions/github-script@v7
        with:
          script: |
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });

            const prList = prs.map(pr => ({
              number: pr.number,
              title: pr.title,
              head_sha: pr.head.sha,
              head_ref: pr.head.ref
            }));

            core.setOutput('pr-list', JSON.stringify(prList));

            return prList;

      - name: Checkout repo üõéÔ∏è
        uses: actions/checkout@v4

      - name: Setup Ruby üíé
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3.5"
          bundler-cache: true

      - name: Setup Python üêç
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick
          pip3 install --upgrade nbconvert
          npm install -g purgecss

      - name: Build PR previews üîß
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            const fs = require('fs');
            const path = require('path');

            const prs = ${{ steps.get-prs.outputs.pr-list }};

            // Create staging directory
            fs.mkdirSync('staging', { recursive: true });

            for (const pr of prs) {
              console.log(`Building PR #${pr.number}: ${pr.title}`);

              try {
                // Fetch and checkout PR
                execSync(`git fetch origin pull/${pr.number}/head:pr-${pr.number}`, { stdio: 'inherit' });
                execSync(`git checkout pr-${pr.number}`, { stdio: 'inherit' });

                // Update config for PR preview
                const config = fs.readFileSync('_config.yml', 'utf8');
                const updatedConfig = config.replace(
                  /baseurl:\s*.*/,
                  `baseurl: /staging/pr${pr.number}`
                );
                fs.writeFileSync('_config.yml', updatedConfig);

                // Build the site
                execSync('export JEKYLL_ENV=production && bundle exec jekyll build', { stdio: 'inherit' });

                // Purge CSS
                execSync('purgecss -c purgecss.config.js', { stdio: 'inherit' });

                // Move built site to staging directory
                fs.mkdirSync(`staging/pr${pr.number}`, { recursive: true });
                execSync(`cp -r _site/* staging/pr${pr.number}/`, { stdio: 'inherit' });

                // Clean up
                execSync('rm -rf _site', { stdio: 'inherit' });
                execSync('git checkout main', { stdio: 'inherit' });

              } catch (error) {
                console.error(`Failed to build PR #${pr.number}:`, error);
              }
            }

      - name: Create staging index page üìÑ
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const prs = ${{ steps.get-prs.outputs.pr-list }};

            const html = `
            <!DOCTYPE html>
            <html lang="en">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>PR Preview Staging Area</title>
              <style>
                body {
                  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
                  max-width: 900px;
                  margin: 50px auto;
                  padding: 20px;
                  background: #f5f5f5;
                }
                h1 {
                  color: #333;
                  border-bottom: 3px solid #0366d6;
                  padding-bottom: 10px;
                }
                .pr-list {
                  background: white;
                  border-radius: 6px;
                  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
                }
                .pr-item {
                  padding: 15px 20px;
                  border-bottom: 1px solid #e1e4e8;
                }
                .pr-item:last-child {
                  border-bottom: none;
                }
                .pr-number {
                  display: inline-block;
                  background: #0366d6;
                  color: white;
                  padding: 2px 8px;
                  border-radius: 3px;
                  font-weight: 600;
                  font-size: 12px;
                  margin-right: 10px;
                }
                .pr-title {
                  color: #333;
                  font-weight: 500;
                }
                .pr-link {
                  display: inline-block;
                  margin-top: 8px;
                  color: #0366d6;
                  text-decoration: none;
                  font-size: 14px;
                }
                .pr-link:hover {
                  text-decoration: underline;
                }
                .empty-state {
                  padding: 40px 20px;
                  text-align: center;
                  color: #666;
                }
                .main-site-link {
                  display: block;
                  margin: 20px 0;
                  padding: 15px;
                  background: white;
                  border-radius: 6px;
                  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
                  text-decoration: none;
                  color: #0366d6;
                  font-weight: 500;
                }
                .main-site-link:hover {
                  background: #f6f8fa;
                }
              </style>
            </head>
            <body>
              <h1>üöÄ PR Preview Staging Area</h1>

              <a href="/" class="main-site-link">
                ‚Üê Back to main site
              </a>

              <div class="pr-list">
                ${prs.length === 0 ? `
                  <div class="empty-state">
                    No open pull requests with previews
                  </div>
                ` : prs.map(pr => `
                  <div class="pr-item">
                    <div>
                      <span class="pr-number">#${pr.number}</span>
                      <span class="pr-title">${pr.title}</span>
                    </div>
                    <a href="/staging/pr${pr.number}/" class="pr-link">
                      View preview ‚Üí
                    </a>
                  </div>
                `).join('')}
              </div>
            </body>
            </html>
            `;

            fs.writeFileSync('staging/index.html', html);

      - name: Upload staging sites
        uses: actions/upload-artifact@v4
        with:
          name: staging-sites
          path: staging

  combine-and-deploy:
    runs-on: ubuntu-latest
    needs: [build-main, build-pr-previews]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download main site
        uses: actions/download-artifact@v4
        with:
          name: main-site
          path: _site

      - name: Download staging sites
        uses: actions/download-artifact@v4
        with:
          name: staging-sites
          path: _site/staging

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload combined artifact üì¶
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to GitHub Pages üöÄ
        id: deployment
        uses: actions/deploy-pages@v4
